- name: Deploy Next.js Application
  hosts: servers
  become: true
  vars:
    ghcr_username: "m4nojTudu"
    ghcr_password: "{{ lookup('env', 'GHCR_PAT') }}"
    domain_suffix: "server.awr360.help"

  tasks:
    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create a directory for Traefik
      file:
        path: /opt/traefik
        state: directory

    - name: Create Traefik configuration file
      copy:
        dest: /opt/traefik/traefik.yml
        content: |
          entryPoints:
            web:
              address: ":80"
          providers:
            docker:
              endpoint: "unix:///var/run/docker.sock"
              exposedByDefault: false
          api:
            dashboard: true

    - name: Create Docker Compose file for Traefik
      copy:
        dest: /opt/traefik/docker-compose.yml
        content: |
          version: '3.8'
          services:
            traefik:
              image: traefik:v2.4
              command:
                - "--api.insecure=true"
                - "--providers.docker=true"
                - "--entrypoints.web.address=:80"
              ports:
                - "80:80"
                - "8080:8080"
              volumes:
                - "/var/run/docker.sock:/var/run/docker.sock"
              networks:
                - web
          networks:
            web:

    - name: Start Traefik
      command: /usr/local/bin/docker-compose up -d
      args:
        chdir: /opt/traefik

    - name: Log in to GitHub Container Registry
      shell: |
        echo "{{ ghcr_password }}" | docker login ghcr.io -u {{ ghcr_username }} --password-stdin
      ignore_errors: yes

    - name: Extract branch name
      set_fact:
        branch_name: "{{ lookup('env', 'SANITIZED_BRANCH_NAME') }}"

    - name: Run Docker container
      shell: |
        INTERNAL_PORT=$((3000 + RANDOM % 1000))
        docker run -d \
          --name admin-{{ branch_name }} \
          --label "traefik.enable=true" \
          --label "traefik.http.routers.{{ branch_name }}.rule=Host(`{{ branch_name }}.{{ domain_suffix }}`)" \
          --label "traefik.http.services.{{ branch_name }}.loadbalancer.server.port=3000" \
          --network web \
          -p $INTERNAL_PORT:3000 \
          ghcr.io/{{ ghcr_username }}/admin:{{ branch_name }}
      environment:
        SANITIZED_BRANCH_NAME: "{{ branch_name }}"
